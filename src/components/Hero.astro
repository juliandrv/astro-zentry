---
import Button from './Button.astro';
---

<div class='relative h-dvh w-screen overflow-x-hidden'>
  <div
    id='video-frame'
    class='relative z-10 h-dvh w-screen overflow-hidden rounded-lg bg-blue-75'
  >
    <div>
      <div
        class='mask-clip-path absolute-center z-50 size-64 cursor-pointer overflow-hidden rounded-lg'
      >
        <div
          id='mini-player'
          class='origin-center scale-50 opacity-0 transition-all duration-500 ease-in hover:scale-100 hover:opacity-100'
        >
          <video
            id='current-video'
            class='next-video-ref size-64 origin-center scale-150 object-cover object-center'
            loop
            muted
          >
          </video>
        </div>
      </div>

      <video
        id='next-video'
        class='current-video-ref absolute-center invisible absolute z-20 size-64 object-cover object-center'
        loop
        muted
      >
      </video>

      <!-- autoplay -->
      <video
        class='full-video-ref absolute left-0 top-0 size-full object-cover object-center'
        loop
        muted
      >
      </video>

      <h1
        class='special-font hero-heading absolute bottom-4 right-5 z-40 text-blue-75'
      >
        G<b>a</b>ming
      </h1>

      <div class='absolute left-0 top-0 z-40 size-full'>
        <div class='mt-24 px-5 sm:px-10'>
          <h1 class='special-font hero-heading text-blue-100'>
            redefi<b>n</b>e
          </h1>

          <p class='mb-5 max-w-64 font-robert-regular text-blue-100'>
            Enter the Metagame Layer
            <br />
            Unleash the Play Economy
          </p>

          <Button
            id='watch-trailer'
            title='Watch Trailer'
            leftIcon='solar:map-arrow-right-bold'
            containerClass='!bg-yellow-300 flex-center gap-3'
          />
        </div>
      </div>
    </div>

    <h1
      class='special-font hero-heading absolute bottom-4 right-5 text-black'
    >
      G<b>a</b>ming
    </h1>

    <script>
      let currentIndex = 1;
      let hasClicked = false;
      let isLoading = true;
      let loadedVideos = 0;

      const totalVideos = 4;

      const nextVideoRef = document.querySelector(
        '.next-video-ref'
      ) as HTMLElement;

      const handleVideoLoad = () => {
        loadedVideos += 1;
      };

      const upcomingVideoIndex = () =>
        (currentIndex % totalVideos) + 1;

      const handleMiniClip = () => {
        hasClicked = true;

        currentIndex = upcomingVideoIndex();

        nextVideoRef?.setAttribute(
          'src',
          getVideoSrc(upcomingVideoIndex())
        );

        currentVideoRef?.setAttribute(
          'src',
          getVideoSrc(currentIndex)
        );
        fullVideoRef?.setAttribute('src', getVideoSrc(currentIndex));
      };

      const miniPlayer = document.querySelector('#mini-player');
      miniPlayer?.addEventListener('click', () => {
        handleMiniClip();
      });

      const getVideoSrc = (index: number) =>
        `videos/hero-${index}.mp4`;

      nextVideoRef?.setAttribute(
        'src',
        getVideoSrc(upcomingVideoIndex())
      );
      nextVideoRef.addEventListener('loadeddata', () => {
        handleVideoLoad();
      });

      const currentVideoRef = document.querySelector(
        '.current-video-ref'
      );
      currentVideoRef?.setAttribute('src', getVideoSrc(currentIndex));

      const fullVideoRef = document.querySelector('.full-video-ref');
      fullVideoRef?.setAttribute(
        'src',
        getVideoSrc(
          currentIndex === totalVideos - 1 ? 1 : currentIndex
        )
      );
      fullVideoRef?.addEventListener('loadeddata', () => {
        handleVideoLoad();
      });
    </script>
  </div>
</div>
